import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import "@fortawesome/fontawesome-svg-core/styles.css";
import { Button, Col, Container, Form, Image, ListGroup, Navbar, Row } from 'react-bootstrap'
import { faFloppyDisk, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';
import { useEffect, useState } from 'react';


export default function Home() {

  // isteklerimi yaparken apiURL kullanacağım
  const apiURL = process.env.apiURL;
  const [notes, setNotes] = useState([]);
  const [selected, setSelected] = useState(null);

  // sadece sayfa ilk yüklendiğinde çalışacak
  useEffect(() => {
    fetch(apiURL)
      .then(res => res.json())
      .then(data => setNotes(data));

  }, []);

  const addNewNote = () => {
    fetch(apiURL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        title: 'New Note',
        content: ''
      })
    })
      .then(res => res.json())
      .then(data => {
        setNotes([...notes, data]);
        setSelected({ ...data });
      });
  };

  const deleteNote = () => {
    fetch(`${apiURL}/${selected.id}`, {
      method: 'DELETE'
    })
      .then(res => {
        if (res.ok) {
          setNotes(notes.filter(note => note.id != selected.id));
          setSelected(null);
        }
      });
  };

  const saveNote = (e) => {
    e.preventDefault();
    fetch(`${apiURL}/${selected.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(selected)
    })
      .then(res => {
        if (res.ok) {
          setNotes(notes.map(note => note.id == selected.id ? { ...selected } : note));
        }
      });
  };




  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type='image/png' href="/logo.png" />
      </Head>
      <main>
        <Navbar bg="dark" expand="lg" variant='dark'>
          <Container>
            <Navbar.Brand href="#home">
              <Image alt='logo' src='/logo.png' width={30} height={30} className='d-inline-block align-top' />{" "}
              KeepNote
            </Navbar.Brand>
          </Container>
        </Navbar>
        <Container className='mt-4'>
          <Row>
            <Col sm="4" lg="3">

              <Button variant="primary" className='w-100' onClick={addNewNote}>
                <FontAwesomeIcon icon={faPlus} />
                New Note
              </Button>

              <ListGroup className='mt-4'>
                {/* // map ile döndürüyorum ve her bir not için bir list item oluşturuyorum. "...note" ile notun tüm özelliklerini kopya olarak alıyorum. */}
                {notes.map(note => (
                  <ListGroup.Item active={note.id == selected?.id} key={note.id} action onClick={() => setSelected({ ...note })}>
                    {note.title}
                  </ListGroup.Item>
                ))}
              </ListGroup>

            </Col>
            <Col sm="8" lg="9">

              {/* // selected varsa formu göster */}
              {selected &&
                <Form onSubmit={saveNote}>
                  <Form.Group className="mb-2">
                    <Form.Control type="text" placeholder="Enter title" value={selected.title}
                      onChange={(e) => setSelected({ ...selected, title: e.target.value })} required />
                  </Form.Group>
                  <Form.Group className="mb-2">
                    <Form.Control type="text" as='textarea' rows='12' placeholder="Write something.." value={selected.content ?? ""}
                      onChange={(e) => setSelected({ ...selected, content: e.target.value })} />
                  </Form.Group>
                  <div>
                    <Button variant="primary" type="submit" className='me-2'>
                      <FontAwesomeIcon icon={faFloppyDisk} /> {" "}
                      Save
                    </Button>
                    <Button variant="danger" type="submit" onClick={deleteNote}>
                      <FontAwesomeIcon icon={faTrash} /> {" "}
                      Delete
                    </Button>
                  </div>
                </Form>
              }

            </Col>
          </Row>
        </Container>
      </main>
    </>
  )
}
